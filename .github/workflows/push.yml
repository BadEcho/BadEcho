# On a push to source control, this compiles a release build for the repository's code, runs tests, and then publishes new development builds to MyGet.

name: CI on Push
 
on:
  push:
    branches:  
      - master
    paths-ignore:
      - '.github/workflows/**'
      - '!.github/workflows/push.yml'
  pull_request:
    branches:
      - master
jobs:
  build:  
    runs-on: windows-2022
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: Add VSTest to PATH
      uses: darenm/Setup-VSTest@v1.2
    - name: Acquire vcpkg Artifacts
      if: ${{ vars.DOWNLOAD_VCPKG == 'true' }}
      uses: dawidd6/action-download-artifact@v3
      with:
        name: vcpkg-artifacts
        commit: ${{ vars.VCPKG_ARTIFACT_SHA }}
        path: src/MsdfGenerator/vcpkg_installed/
    - name: Update vcpkg Output Timestamp
      if: ${{ vars.DOWNLOAD_VCPKG == 'true' }}
      run: touch src/MsdfGenerator/vcpkg_installed/x64-windows-static-md/.msbuildstamp-x64-windows-static-md.stamp
    - name: Build
      shell: pwsh      
      run: .\build\build.ps1 $(git rev-parse --short HEAD) $(git rev-list --count "$(git log -1 --pretty=format:"%H" version.json)..HEAD") Package
    - name: Push to MyGet
      env:
        PKG_URL: https://www.myget.org/F/bad-echo/api/v3/index.json
        PKG_API_KEY: ${{ secrets.MYGET_API_KEY }}
      run: .\build\push.ps1
      shell: pwsh
    - name: Build Artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: artifacts
        path: artifacts/**/*
    - name: vcpkg Artifacts
      if: ${{ vars.UPLOAD_VCPKG == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: vcpkg-artifacts
        path: src/MsdfGenerator/vcpkg_installed/**/*
