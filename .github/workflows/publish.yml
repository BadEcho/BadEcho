# Publishes a new release of Bad Echo software to official NuGet feeds.
# To configure this workflow, replace variables with their correct values in the "env" section below.

name: Publish Release

on:
  workflow_dispatch:
    inputs:
      component-to-increment:
        description: Version Component to Increment
        required: true
        type: choice
        options:
        - Major
        - Minor
        - Patch
jobs:
  build:
    name: Execute Build Workflow
    uses: ./.github/workflows/push.yml
    with:
      build-script-args: 'PackageConfiguration = Package `nSkipTests = true'
  bump-version:
    name: Bump Version
    needs: build
    runs-on: windows-2022
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0      
    - run: git config --global user.email "chamber@badecho.com"
    - run: git config --global user.name "Echo Chamber"
    - name: Create Release Tag
      shell: pwsh
      run: |
        $versionSettings = Get-Content version.json | ConvertFrom-Json
        $versionTag = "v{0}.{1}.{2}" -f $versionSettings.majorVersion, $versionSettings.minorVersion, $versionSettings.patchVersion
        git tag -a $versionTag HEAD -m "${{ env.product-name }} $versionTag"
        git push origin $versionTag
    - name: Increment Version File
      shell: pwsh
      run: .\build\Bump-Version.ps1 ${{ github.event.inputs.component-to-increment }}
  # publish:
  #   name: Publish
  #   runs-on: windows-2022
  #   env:
  #     product-Name: Bad Echo Core Technologies
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4
  #     with:
  #       submodules: recursive
  #       fetch-depth: 0      
  #   - run: git config --global user.email "chamber@badecho.com"
  #   - run: git config --global user.name "Echo Chamber"
  #   - name: Create Echo Version
  #     run: |
  #       git tag -a ${{ github.event.inputs.echo-version }} HEAD -m "${{ env.product-name }} ${{ github.event.inputs.echo-version }}"
  #       git push origin ${{ github.event.inputs.echo-version }}
  #   - name: Setup .NET
  #     uses: actions/setup-dotnet@v4
  #     with:
  #       dotnet-version: 9.0.x      
  #   - name: Add MSBuild to PATH
  #     uses: microsoft/setup-msbuild@v2
  #   - name: Add VSTest to PATH
  #     uses: darenm/Setup-VSTest@v1.3
  #   - name: Acquire vcpkg Artifacts
  #     if: ${{ vars.DOWNLOAD_VCPKG == 'true' }}
  #     uses: dawidd6/action-download-artifact@v3
  #     with:
  #       workflow: push.yml
  #       name: vcpkg-artifacts
  #       commit: ${{ vars.VCPKG_ARTIFACT_SHA }}
  #       path: src/MsdfGenerator/vcpkg_installed/
  #   - name: Update vcpkg Output Timestamp
  #     if: ${{ vars.DOWNLOAD_VCPKG == 'true' }}
  #     run: touch src/MsdfGenerator/vcpkg_installed/x64-windows-static-md/.msbuildstamp-x64-windows-static-md.stamp
  #   - name: Build
  #     shell: pwsh
  #     run: .\build\build.ps1 -PackageConfiguration Package -SkipTests
  #   - name: Push to NuGet
  #     env:
  #       PKG_URL: https://api.nuget.org/v3/index.json
  #       PKG_API_KEY: ${{ secrets.NUGET_API_KEY }}
  #     run: .\build\push.ps1
  #     shell: pwsh
  #   - name: Build Artifacts
  #     if: always()
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: artifacts
  #       path: artifacts/**/*
